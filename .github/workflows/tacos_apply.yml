name: TACOS Apply

# downstream projects should use events:
###pull_request:
###  types: [labeled]

on:
  workflow_call:
    inputs:
      tacos_gha_repo:
        type: string
        default: getsentry/tacos-gha
      tacos_gha_ref:
        type: string
        default: refs/heads/stable

defaults:
  run:
    shell: env ./tacos-gha/lib/ci/default-shell {0}

# Cancel in progress workflows on pull_requests.
# https://docs.github.com/en/actions/using-jobs/using-concurrency#example-using-a-fallback-value
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  GETSENTRY_SAC_VERB: apply

jobs:
  determine-tf-root-modules:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    name: list slices
    if: github.event.pull_request.draft == false
    outputs:
      slices: ${{ steps.slices.outputs.slices }}

    steps:
      - uses: actions/checkout@v4
      - uses: actions/checkout@v4
        with:
          repository: ${{inputs.tacos_gha_repo}}
          ref: ${{inputs.tacos_gha_ref}}
          path: tacos-gha

      - id: slices
        uses: ./tacos-gha/.github/actions/determine-slices

  tacos_apply:
    # note: we want to noop if they converted to draft first
    if: |
      true
      && github.event.pull_request.draft == false
      && github.event.label.name == ':taco::apply'

    needs: [determine-tf-root-modules]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      id-token: write

    strategy:
      fail-fast: false
      matrix:
        tf-root-module:
          ${{ fromJSON(needs.determine-tf-root-modules.outputs.slices) }}

    env:
      TF_ROOT_MODULE: ${{matrix.tf-root-module}}

    steps:
      - uses: actions/checkout@v4
      - uses: actions/checkout@v4
        with:
          repository: ${{inputs.tacos_gha_repo}}
          ref: ${{inputs.tacos_gha_ref}}
          path: tacos-gha
      - name: setup
        uses: ./tacos-gha/.github/actions/setup

      # TODO fetch the `--out tfplan` file from the plan workflow, to use here
      # so that apply matches the plan reviewed by construction
      ### - uses: actions/download-artifact@v4
      ###   with:
      ###     name: tfplan
      ###     # TODO: github-script to fetch run-id of the most recent tfplan
      ###     run-id: ${{steps.find-plan.output.run-id}}

      - name: Terragrunt Apply
        run: |
          gha-log-as-step-summary "$TACOS_GHA_HOME/"lib/ci/tacos-apply

  # FIXME: we need a fan-in summary
  # summary:

  reset_label:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    if: |
      github.event.label.name == ':taco::apply'

    steps:
      - name: Reset label
        uses: actions/github-script@v7
        if: always()
        with:
          script: |
            github.rest.issues.removeLabel({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: ':taco::apply'
            })
