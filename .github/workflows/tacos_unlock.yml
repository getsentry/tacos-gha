name: Terraform Unlock

on:
  pull_request:
    types: [labeled]

defaults:
  run:
    shell: env ./lib/ci/default-shell {0}

env:
  # NOTE: please keep these in sync with ../../.terra*-version
  tf_version: "1.6.4"
  tg_version: "0.53.5"
  working_dir: "."
  deploy_environ: "dev"
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GETSENTRY_SAC_VERB: apply

jobs:
  terraform_unlock:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      id-token: write
    if: ${{ github.event.label.name == ':taco::unlock' }}
    outputs:
      summary: ${{ steps.release-terraform-lock.outputs.summary }}
    steps:
      - uses: actions/checkout@v4
      - uses: HatsuneMiku3939/direnv-action@v1

      - name: show event
        run: |
          : <<'EOF'
            ${{toJSON(github.event)}}
          EOF

      - name: tell TF username and PR
        uses: ./.github/actions/set-username-and-hostname

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      # see ./.python-version
      - uses: actions/setup-python@v5

      - id: get-tgv
        run: |
          printf 'terragrunt_version=' >> "$GITHUB_ENV"
          cat .terragrunt-version >> "$GITHUB_ENV"

      - name: Setup Terragrunt
        uses: autero1/action-terragrunt@v1.1.0
        with:
          terragrunt_version: ${{env.terragrunt_version}}

      - name: set workload identity provider
        id: set-workload-identity-provider
        run: ./lib/ci/set-workload-identity-provider "$deploy_environ"

      - name: set terraformer
        id: set-terraformer
        working-directory: ${{ env.working_dir }}
        run: ./lib/ci/set-terraformer

      - name: gcp auth
        id: auth
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{steps.set-workload-identity-provider.outputs.workload_identity_provider}}
          service_account: ${{steps.set-terraformer.outputs.terraformer}}

      - name: set gcp identity
        run: |
          # TODO: upstream feature request on google-github-actions/auth -- this
          #   should be a default behavior
          gcloud config get account || : code $?
          gcloud config set account '${{steps.set-terraformer.outputs.terraformer}}'

          # also: mask the access token (NOTE: use cat to avoid xtrace'ing the token)
          # TODO: ditto
          cat <<< "::add-mask::$(gcloud auth print-access-token)"

      - name: Release Terraform lock
        id: release-terraform-lock
        run: |
          # release all tfstate locks currently held
          # FIXME: surface unexpected unlock failures
          ./lib/terragrunt/slices |
            xargs ./lib/github/log-as-step-summary \
              sudo-sac sh -c '
                for slice in "$@"; do
                  ./lib/tf-lock/tf-lock-release "$slice" || : unlock failed
                done
              ' \
            \
          ;

  summary:
    name: "Summarize lock state."
    needs: [terraform_unlock]
    runs-on: ubuntu-latest
    steps:
      - name: Comment on PR regarding lock state
        uses: actions/github-script@v7
        env:
          summary: ${{ needs.terraform_unlock.outputs.summary }}
        with:
          script: |
            const summary = JSON.parse(process.env.summary)
            const body = `\
            Terraform lock state:

            ${summary}
            `
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body,
            });

  reset_label:
    runs-on: ubuntu-latest
    if: |
      github.event.label.name == ':taco::unlock'
    steps:
      - name: Reset label
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.removeLabel({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: ':taco::unlock'
            })
