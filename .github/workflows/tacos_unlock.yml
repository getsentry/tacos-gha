name: TACOS Unlock

# downstream projects should use events:
###pull_request:
###  types: [closed, converted_to_draft, labeled]

on:
  workflow_call:
    inputs:
      tacos_gha_repo:
        type: string
        default: getsentry/tacos-gha
      tacos_gha_ref:
        type: string
        default: refs/heads/stable
    secrets:
      ssh-private-key:
        description: "Private SSH key to use for git clone"
        required: false

defaults:
  run:
    shell: env ./tacos-gha/lib/ci/default-shell {0}

# Cancel in progress workflows on pull_requests.
# https://docs.github.com/en/actions/using-jobs/using-concurrency#example-using-a-fallback-value
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  GETSENTRY_SAC_VERB: state-admin

jobs:
  determine-terraformers:
    name: list terraformers
    if: |
      false
      || github.event.action != 'labeled'
      || github.event.label.name == ':taco::unlock'
    outputs:
      terraformers: ${{ steps.list-terraformers.outputs.terraformers }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout IAC
        uses: actions/checkout@v4
      - name: Checkout tacos-gha
        uses: actions/checkout@v4
        with:
          repository: ${{inputs.tacos_gha_repo}}
          ref: ${{inputs.tacos_gha_ref}}
          path: tacos-gha
      - name: basic-setup
        uses: ./tacos-gha/.github/actions/basic-setup
      - name: List Terraformers
        id: list-terraformers
        run: |
          "$TACOS_GHA_HOME/"lib/ci/list-terraformers
  tacos_unlock:
    name: TACOS Unlock
    needs: [determine-terraformers]
    if: |
      needs.determine-terraformers.outputs.terraformers != '[]'
    strategy:
      fail-fast: false
      matrix:
        terraformer:
          ${{ fromJSON(needs.determine-terraformers.outputs.terraformers) }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      id-token: write
    env:
      SUDO_GCP_SERVICE_ACCOUNT: ${{fromJSON(matrix.terraformer).SUDO_GCP_SERVICE_ACCOUNT}}
      GETSENTRY_SAC_OIDC: ${{fromJSON(matrix.terraformer).GETSENTRY_SAC_OIDC}}
      SLICES: ${{toJSON(fromJSON(matrix.terraformer).slices)}}
    steps:
      - name: Checkout IAC
        uses: actions/checkout@v4
      - name: Checkout tacos-gha
        uses: actions/checkout@v4
        with:
          repository: ${{inputs.tacos_gha_repo}}
          ref: ${{inputs.tacos_gha_ref}}
          path: tacos-gha
      - name: basic-setup
        uses: ./tacos-gha/.github/actions/basic-setup
        with:
          SUDO_GCP_SERVICE_ACCOUNT: ${{ env.SUDO_GCP_SERVICE_ACCOUNT }}
          GETSENTRY_SAC_OIDC: ${{ env.GETSENTRY_SAC_OIDC }}

      - name: Unlock
        id: main
        run: |
          # release all tfstate locks currently held 
          echo "$SLICES" | jq -r '.[]' | ./tacos-gha/lib/ci/unlock
      - name: update PR
        if: always()
        uses: thollander/actions-comment-pull-request@v2.4.3
        with:
          message: ${{ fromJSON(steps.main.outputs.summary) }}
          comment_tag: unlock
          mode: recreate
  reset-label:
    name: Reset Label
    uses: ./.github/workflows/reset-label.yml
    with:
      label: ":taco::unlock"
      tacos_gha_repo: ${{inputs.tacos_gha_repo}}
      tacos_gha_ref: ${{inputs.tacos_gha_ref}}
