name: TACOS Unlock

# downstream projects should use events:
###pull_request:
###  types: [closed, converted_to_draft, labeled]

on:
  workflow_call:
    inputs:
      tacos_gha_repo:
        type: string
        default: getsentry/tacos-gha
      tacos_gha_ref:
        type: string
        default: refs/heads/stable
    secrets:
      ssh-private-key:
        description: "Private SSH key to use for git clone"
        required: false

defaults:
  run:
    shell: env ./tacos-gha/lib/ci/default-shell {0}

# Cancel in progress workflows on pull_requests.
# https://docs.github.com/en/actions/using-jobs/using-concurrency#example-using-a-fallback-value
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  GETSENTRY_SAC_VERB: state-admin

jobs:
  determine-terraformers:
    name: list terraformers
    if: |
      false
      || github.event.action != 'labeled'
      || github.event.label.name == ':taco::unlock'
    outputs:
      terraformers: ${{ steps.list-terraformers.outputs }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout IAC
        uses: actions/checkout@v4
      - name: Checkout tacos-gha
        uses: actions/checkout@v4
        with:
          repository: ${{inputs.tacos_gha_repo}}
          ref: ${{inputs.tacos_gha_ref}}
          path: tacos-gha
      - name: Setup
        uses: ./tacos-gha/.github/actions/just-the-basics
      - name: setup terraform versions
        run: |
          gha-set-env 'TF_VERSION' < "$(nearest-config-file .terraform-version)"
          gha-set-env 'TERRAGRUNT_VERSION' < "$(nearest-config-file .terragrunt-version)"
      - name: Setup Terragrunt
        uses: autero1/action-terragrunt@v1.3.2
        with:
          terragrunt_version: ${{env.TERRAGRUNT_VERSION}}
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false
          terraform_version: ${{ env.TF_VERSION }}
      - name: List Terraformers
        id: list-terraformers
        run: |
          gha-log-as-step-summary "$TACOS_GHA_HOME/"lib/ci/list-terraformers
  tacos_unlock:
    name: TACOS Unlock
    needs: [determine-terraformers]
    if: |
      needs.determine-terraformers.outputs != '[]'
    strategy:
      fail-fast: false
      matrix:
        terraformer: |
          ${{ fromJSON(needs.determine-terraformers.outputs.slices) }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      id-token: write
    env:
      SUDO_GCP_SERVICE_ACCOUNT: ${{matrix.terraformer.SUDO_GCP_SERVICE_ACCOUNT}}
      GETSENTRY_SAC_OIDC: ${{matrix.terraformer.GETSENTRY_SAC_OIDC}}
    steps:
      - name: Checkout IAC
        uses: actions/checkout@v4
      - name: Checkout tacos-gha
        uses: actions/checkout@v4
        with:
          repository: ${{inputs.tacos_gha_repo}}
          ref: ${{inputs.tacos_gha_ref}}
          path: tacos-gha
      - name: Setup
        uses: ./tacos-gha/.github/actions/setup
        with:
          ssh-private-key: ${{ secrets.ssh-private-key }}
          # We explicitly list the low-concern actions, during which users will
          # recieve a higher level of access -- the identity of the original PR
          # author. All other actions will receive lower access -- the identity
          # of the person pushing the "Re-run" button.
          #
          # see doc/permissions.md
          user: |-
            ${{
              true
              && github.event_name == 'pull_request'
              && (
                  false
                  || github.event.action == 'closed'
                  || github.event.action == 'converted_to_draft'
              )

              && github.event.pull_request.user.login

              || github.triggering_actor
            }}
      - name: Unlock
        id: main
        run: |
          # release all tfstate locks currently held 
          ./tacos-gha/lib/ci/unlock
      - name: Update PR
        # we want to report failures, too
        # we can't use matrix fan in, there are too many slices
        if: always()
        uses: thollander/actions-comment-pull-request@v2.4.3
        with:
          message: ${{ fromJSON(steps.main.outputs.summary) }}
          comment_tag: unlock

  reset-label:
    name: Reset Label
    uses: ./.github/workflows/reset-label.yml
    with:
      label: ":taco::unlock"
      tacos_gha_repo: ${{inputs.tacos_gha_repo}}
      tacos_gha_ref: ${{inputs.tacos_gha_ref}}
