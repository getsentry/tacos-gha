name: TACOS Unlock

# downstream projects should use events:
###pull_request:
###  types: [labeled]

on:
  workflow_call:
    inputs:
      tacos_gha_repo:
        type: string
        default: getsentry/tacos-gha
      tacos_gha_ref:
        type: string
        default: refs/heads/stable

defaults:
  run:
    shell: env ./tacos-gha/lib/ci/default-shell {0}

# Cancel in progress workflows on pull_requests.
# https://docs.github.com/en/actions/using-jobs/using-concurrency#example-using-a-fallback-value
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  GETSENTRY_SAC_VERB: apply

jobs:
  tacos_unlock:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      id-token: write

    # note: we want to let people unlock even if they converted to draft first
    if: |
      github.event.label.name == ':taco::unlock'
    outputs:
      summary: ${{ steps.release-terraform-lock.outputs.summary }}

    steps:
      - uses: bukzor/direnv-install@v1
      - uses: actions/checkout@v4
      - uses: actions/checkout@v4
        with:
          repository: ${{inputs.tacos_gha_repo}}
          ref: ${{inputs.tacos_gha_ref}}
          path: tacos-gha
      - name: tell TF username and PR
        uses: ./tacos-gha/.github/actions/set-username-and-hostname
      - name: environment config
        run: |
          "$TACOS_GHA_HOME/"lib/ci/setenv

      ###- name: Setup Terraform
      ###  uses: hashicorp/setup-terraform@v3
      ###  with:
      ###    terraform_wrapper: false

      - uses: actions/setup-python@v5
        with:
          python-version: ${{env.PYTHON_VERSION}}

      - name: Setup Terragrunt
        uses: autero1/action-terragrunt@v1.1.0
        with:
          terragrunt_version: ${{env.TERRAGRUNT_VERSION}}

      - name: gcp auth
        id: auth
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{env.GETSENTRY_SAC_OIDC}}
          service_account: ${{env.SUDO_GCP_SERVICE_ACCOUNT}}

      - name: set gcloud identity
        run: |
          # TODO: upstream feature request on google-github-actions/auth -- this
          #   should be a default behavior
          gcloud config get account || : code $?
          gcloud config set account "$SUDO_GCP_SERVICE_ACCOUNT"

          # also: mask the access token (NOTE: use cat to avoid xtrace'ing the token)
          # TODO: ditto
          cat <<< "::add-mask::$(gcloud auth print-access-token)"

      - name: Release Terraform lock
        id: release-terraform-lock
        run: |
          # release all tfstate locks currently held
          # FIXME: matrix strategy, surface unexpected unlock failures
          terragrunt-slices |
            xargs gha-log-as-step-summary \
              sudo-gcp sh -c '
                for slice in "$@"; do
                  tf-lock-release "$slice" || : unlock failed
                done
              ' \
            \
          ;

  summary:
    name: summarize
    needs: [tacos_unlock]
    runs-on: ubuntu-latest
    steps:
      - name: Comment on PR regarding lock state
        uses: actions/github-script@v7
        env:
          summary: ${{ needs.tacos_unlock.outputs.summary }}
        with:
          script: |
            const summary = JSON.parse(process.env.summary)
            const body = `\
            Terraform lock state:

            ${summary}
            `
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body,
            });

  reset_label:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    if: |
      github.event.label.name == ':taco::unlock'

    steps:
      - name: Reset label
        uses: actions/github-script@v7
        if: always()
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.removeLabel({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: ':taco::unlock'
            })
