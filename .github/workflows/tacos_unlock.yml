name: TACOS Unlock

# downstream projects should use events:
###pull_request:
###  types: [closed, converted_to_draft, labeled]

on:
  workflow_call:
    inputs:
      tacos_gha_repo:
        type: string
        default: getsentry/tacos-gha
      tacos_gha_ref:
        type: string
        default: refs/heads/stable
    secrets:
      ssh-private-key:
        description: "Private SSH key to use for git clone"
        required: false

defaults:
  run:
    shell: env ./tacos-gha/lib/ci/default-shell {0}

# Cancel in progress workflows on pull_requests.
# https://docs.github.com/en/actions/using-jobs/using-concurrency#example-using-a-fallback-value
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  GETSENTRY_SAC_VERB: state-admin

jobs:
  determine-tf-root-modules:
    name: List Slices
    if: |
      false
      || github.event.action != 'labeled'
      || github.event.label.name == ':taco::unlock'
    outputs:
      slices: ${{ steps.list-slices }}
    env:
      PR_NUMBER: ${{ github.event.number }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout IAC
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Checkout tacos-gha
        uses: actions/checkout@v4
        with:
          repository: ${{inputs.tacos_gha_repo}}
          ref: ${{inputs.tacos_gha_ref}}
          path: tacos-gha
      - name: List Slices
        id: list-slices
        uses: ./tacos-gha/.github/actions/list-slices

  tacos_unlock:
    name: TACOS Unlock
    needs: [determine-tf-root-modules]
    if: |
      needs.determine-tf-root-modules.outputs.slices != '[]'
    strategy:
      fail-fast: false
      matrix:
        tf-root-module:
          ${{ fromJSON(needs.determine-tf-root-modules.outputs.slices) }}

    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      id-token: write
      checks: read
      actions: read

    env:
      TF_ROOT_MODULE: ${{matrix.tf-root-module}}
    steps:
      - name: Checkout IAC
        uses: actions/checkout@v4
      - name: Checkout tacos-gha
        uses: actions/checkout@v4
        with:
          repository: ${{inputs.tacos_gha_repo}}
          ref: ${{inputs.tacos_gha_ref}}
          path: tacos-gha
      - name: Setup
        uses: ./tacos-gha/.github/actions/setup
        with:
          ssh-private-key: ${{ secrets.ssh-private-key }}
          # We explicitly list the low-concern actions, during which users will
          # recieve a higher level of access -- the identity of the original PR
          # author. All other actions will receive lower access -- the identity
          # of the person pushing the "Re-run" button.
          #
          # see doc/permissions.md
          user: |-
            ${{
              true
              && github.event_name == 'pull_request'
              && (
                  false
                  || github.event.action == 'closed'
                  || github.event.action == 'converted_to_draft'
              )

              && github.event.pull_request.user.login

              || github.triggering_actor
            }}

      - name: Unlock
        id: main
        run: |
          tf-step-summary "TACOS Unlock" "$TACOS_GHA_HOME/"lib/tacos/unlock

      - name: Save matrix result
        # we need to show any errors to end-users
        if: always()
        uses: ./tacos-gha/.github/actions/matrix-fan-out

  summary:
    needs: tacos_unlock
    # we need to report failures, too
    if: always() && needs.tacos_unlock.result != 'skipped'

    runs-on: ubuntu-latest

    steps:
      - name: Checkout tacos-gha
        uses: actions/checkout@v4
        with:
          repository: ${{inputs.tacos_gha_repo}}
          ref: ${{inputs.tacos_gha_ref}}
          path: tacos-gha

      - name: Setup
        uses: ./tacos-gha/.github/actions/just-the-basics
      - name: Run matrix-fan-in
        uses: ./tacos-gha/.github/actions/matrix-fan-in
      - name: Summarize
        id: summary
        run: |
          ./tacos-gha/lib/ci/tacos-unlock-summary |
            gha-step-summary

      - name: Update PR
        # we want to report failures, too
        if: always()

        uses: thollander/actions-comment-pull-request@v2.4.3
        with:
          message: ${{ fromJSON(steps.summary.outputs.summary) }}
          comment_tag: unlock
          mode: recreate

  reset-label:
    name: Reset Label

    uses: ./.github/workflows/reset-label.yml
    with:
      label: ":taco::unlock"
      tacos_gha_repo: ${{inputs.tacos_gha_repo}}
      tacos_gha_ref: ${{inputs.tacos_gha_ref}}
