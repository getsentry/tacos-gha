name: TACOS Lock

# downstream projects should use events:
###pull_request:
###  types: [opened, synchronize, reopened]

on:
  workflow_call:
    inputs:
      tacos_gha_repo:
        type: string
        default: getsentry/tacos-gha
      tacos_gha_ref:
        type: string
        default: refs/heads/stable

defaults:
  run:
    shell: env ./tacos-gha/lib/ci/default-shell {0}

# Cancel in progress workflows on pull_requests.
# https://docs.github.com/en/actions/using-jobs/using-concurrency#example-using-a-fallback-value
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  GETSENTRY_SAC_VERB: apply

jobs:
  determine-tf-root-modules:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    name: "Determine TF slices to lock"
    if: github.event.pull_request.draft == false
    outputs:
      slices: ${{ steps.slices.outputs.slices }}

    steps:
      - uses: bukzor-sentryio/direnv-install@main
      - uses: actions/checkout@v4
      - uses: actions/checkout@v4
        with:
          repository: ${{inputs.tacos_gha_repo}}
          ref: ${{inputs.tacos_gha_ref}}
          path: tacos-gha

      - id: files
        uses: getsentry/paths-filter@v2.11.1
        with:
          filters: "all: ['**']"
          list-files: json

      # see ./.python-version
      - run: |
          ./tacos-gha/lib/github/set-env 'PYTHON_VERSION' grep -v '^#' tacos-gha/.python-version
      - uses: actions/setup-python@v5
        with:
          python-version: ${{env.PYTHON_VERSION}}

      - id: slices
        run: |
          sudo sh -c 'ls -d /etc/sudo*' | sudo xargs ls -la
          sudo sh -c 'find /etc/sudo* -type f' | sudo xargs tail -n9999

          : determine which slices to lock
          python -c 'import lib; print(lib)' || : code $?
          echo "$PYTHONPATH"
          tr ':' '\n' <<< "$PYTHONPATH" |
            xargs -n1 ls -la

          ( echo -n slices=
            ./tacos-gha/lib/ci/dependent-slices <<'EOF'
          ${{steps.files.outputs.all_files}}
          EOF
          ) | tee -a "$GITHUB_OUTPUT"

  main:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      id-token: write

    needs: [determine-tf-root-modules]
    if: github.event.pull_request.draft == false
    strategy:
      fail-fast: false
      matrix:
        tf-root-module:
          ${{ fromJSON(needs.determine-tf-root-modules.outputs.slices) }}

    steps:
      - uses: actions/checkout@v4
      - uses: actions/checkout@v4
        with:
          repository: ${{inputs.tacos_gha_repo}}
          ref: ${{inputs.tacos_gha_ref}}
          path: tacos-gha
      - run: echo 'source_env tacos-gha' >> .envrc
      - uses: HatsuneMiku3939/direnv-action@v1

      # see ./.python-version
      - run: |
          ./tacos-gha/lib/github/set-env 'PYTHON_VERSION' grep -v '^#' tacos-gha/.python-version
      - uses: actions/setup-python@v5
        with:
          python-version: ${{env.PYTHON_VERSION}}

      - name: set workload identity provider
        id: set-workload-identity-provider
        run: ./tacos-gha/lib/ci/set-workload-identity-provider

      - name: set terraformer
        id: set-terraformer
        working-directory: ${{ env.working_dir }}
        run: ./tacos-gha/lib/ci/set-terraformer

      - name: gcp auth
        id: auth
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{env.GETSENTRY_SAC_OIDC}}
          service_account: ${{env.GETSENTRY_SAC_TERRAFORMER}}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: tell TF username and PR
        uses: ./tacos-gha/.github/actions/set-username-and-hostname

      - name: Obtain the lock
        id: lock
        run: |
          ./tacos-gha/lib/github/log-as-step-summary \
            ./tacos-gha/lib/ci/obtain-lock '${{matrix.tf-root-module}}' \
          ;

  summary:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    name: "Summarize lock state."
    needs: [main]
    if: |
      true
      && github.event.pull_request.draft == false
      && always()

    steps:
      - uses: actions/checkout@v4
        if: always()
        with:
          repository: ${{inputs.tacos_gha_repo}}
          ref: ${{inputs.tacos_gha_ref}}
          path: tacos-gha
      - name: show full context
        if: always()
        run: |
          : <<'EOF'
          env:      ${{ toJSON(env) }},
          vars:     ${{ toJSON(vars) }},
          job:      ${{ toJSON(job) }},
          jobs:     # for reusable workflows only
          steps:    ${{ toJSON(steps) }},
          runner:   ${{ toJSON(runner) }},
          secrets:  ${{ toJSON(secrets) }},
          strategy: ${{ toJSON(strategy) }},
          matrix:   ${{ toJSON(matrix) }},
          needs:    ${{ toJSON(needs) }},
          inputs:   ${{ toJSON(inputs) }},
          EOF

      ###- name: Comment on PR whether lock is obtained
      ###  if: always()
      ###  uses: actions/github-script@v7
      ###  with:
      ###    script: |
      ###      const lockObtained = process.env.TF_LOCK === "true"
      ###      const script = require('./lib/ci/lock-acquisition-comment.js')
      ###      console.log(script({github, context, lockObtained}))
