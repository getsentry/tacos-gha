name: TACOS Plan

# downstream projects should use events:
###pull_request:
###  types: [opened, synchronize, reopened]

on:
  workflow_call:
    inputs:
      tacos_gha_repo:
        type: string
        default: getsentry/tacos-gha
      tacos_gha_ref:
        type: string
        default: refs/heads/stable

defaults:
  run:
    shell: env ./tacos-gha/lib/ci/default-shell {0}

# Cancel in progress workflows on pull_requests.
# https://docs.github.com/en/actions/using-jobs/using-concurrency#example-using-a-fallback-value
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

# FIXME: don't use the apply terraformer for the plan workflow
# discussion: https://sentry.slack.com/archives/C05GNJCN9LM/p1705787896980429
# problem: currently the plan terraformer is very strictly readonly but we need
#     to be able to lock/unlock the tfstate in this workflow
# proposals:
#   1. add a third "planlock" member to the terraformer? We want to grant write
#       permissions just enough for locking state.
#   2. add an ACL to grant this specific permission, but this is deprecated
#       https://cloud.google.com/storage/docs/access-control/lists
#   3. use conditional IAM (i.e. add some CEL code) to condtionally grant the
#       planner write to just the lock file
env:
  GETSENTRY_SAC_VERB: apply

jobs:
  determine-tf-root-modules:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    name: list slices
    if: github.event.pull_request.draft == false
    outputs:
      slices: ${{ steps.main.outputs.slices }}

    steps:
      - name: Checkout IAC
        uses: actions/checkout@v4
      - name: Checkout tacos-gha
        uses: actions/checkout@v4
        with:
          repository: ${{inputs.tacos_gha_repo}}
          ref: ${{inputs.tacos_gha_ref}}
          path: tacos-gha

      - name: Determine Slices
        id: main
        uses: ./tacos-gha/.github/actions/determine-slices

  tacos_plan:
    # note: we want to plan draft PRs, too

    needs: [determine-tf-root-modules]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      id-token: write

    strategy:
      fail-fast: false
      matrix:
        tf-root-module:
          ${{ fromJSON(needs.determine-tf-root-modules.outputs.slices) }}

    env:
      TF_ROOT_MODULE: ${{matrix.tf-root-module}}

    steps:
      - name: Checkout IAC
        uses: actions/checkout@v4
      - name: Checkout tacos-gha
        uses: actions/checkout@v4
        with:
          repository: ${{inputs.tacos_gha_repo}}
          ref: ${{inputs.tacos_gha_ref}}
          path: tacos-gha
      - name: Setup
        uses: ./tacos-gha/.github/actions/setup

      - name: Plan
        id: main
        run: |
          "$TACOS_GHA_HOME/"lib/ci/tacos-plan

      - name: Store `tfplan`
        uses: actions/upload-artifact@v4
        with:
          name: ${{steps.main.outputs.artifact_name}}
          path: ${{steps.main.outputs.artifact_path}}
          if-no-files-found: error
          overwrite: true # we only want the latest plan


  # FIXME: we need a fan-in summary
  # summary:
