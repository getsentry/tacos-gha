name: TACOS Plan

# downstream projects should use events:
###pull_request:
###  types: [opened, synchronize, reopened]

on:
  workflow_call:
    inputs:
      tacos_gha_repo:
        type: string
        default: getsentry/tacos-gha
      tacos_gha_ref:
        type: string
        default: refs/heads/stable

defaults:
  run:
    shell: env ./tacos-gha/lib/ci/default-shell {0}

# Cancel in progress workflows on pull_requests.
# https://docs.github.com/en/actions/using-jobs/using-concurrency#example-using-a-fallback-value
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  determine-tf-root-modules:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    name: list slices
    if: github.event.pull_request.draft == false
    outputs:
      slices: ${{ steps.main.outputs.slices }}

    steps:
      - name: Checkout IAC
        uses: actions/checkout@v4
      - name: Checkout tacos-gha
        uses: actions/checkout@v4
        with:
          repository: ${{inputs.tacos_gha_repo}}
          ref: ${{inputs.tacos_gha_ref}}
          path: tacos-gha

      - name: Determine Slices
        id: main
        uses: ./tacos-gha/.github/actions/determine-slices

  tacos_plan:
    # note: we want to plan draft PRs, too

    needs: [determine-tf-root-modules]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      id-token: write

    strategy:
      fail-fast: false
      matrix:
        tf-root-module:
          ${{ fromJSON(needs.determine-tf-root-modules.outputs.slices) }}

    env:
      TF_ROOT_MODULE: ${{matrix.tf-root-module}}

    steps:
      - name: Checkout IAC
        uses: actions/checkout@v4
      - name: Checkout tacos-gha
        uses: actions/checkout@v4
        with:
          repository: ${{inputs.tacos_gha_repo}}
          ref: ${{inputs.tacos_gha_ref}}
          path: tacos-gha
      - name: Setup
        uses: ./tacos-gha/.github/actions/setup

      - name: Plan
        id: main
        run: |
          "$TACOS_GHA_HOME/"lib/ci/tacos-plan

      - name: Store `tfplan`
        uses: actions/upload-artifact@v4
        with:
          name: ${{steps.main.outputs.artifact_name}}
          path: ${{steps.main.outputs.artifact_path}}
          if-no-files-found: error
          overwrite: true # we only want the latest plan


  # FIXME: we need a fan-in summary
  # summary:
