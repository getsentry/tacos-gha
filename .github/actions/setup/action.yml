name: Setup

inputs:
  shell:
    default: env ./tacos-gha/lib/ci/default-shell {0}

runs:
  using: composite

  steps:
    - uses: ./tacos-gha/.github/actions/just-the-basics

    - name: tell TF username and PR
      uses: ./tacos-gha/.github/actions/set-username-and-hostname

    - name: set workload identity provider
      id: set-workload-identity-provider
      shell: ${{inputs.shell}}
      run: |
        "$TACOS_GHA_HOME/"lib/ci/set-workload-identity-provider

    - name: set terraformer
      id: set-terraformer
      shell: ${{inputs.shell}}
      run: |
        "$TACOS_GHA_HOME/"lib/ci/set-terraformer

    - name: gcp auth
      id: auth
      uses: google-github-actions/auth@v1
      with:
        workload_identity_provider: ${{env.GETSENTRY_SAC_OIDC}}
        service_account: ${{env.SUDO_GCP_SERVICE_ACCOUNT}}

    - name: set gcloud identity
      shell: ${{inputs.shell}}
      run: |
        # TODO: upstream feature request on google-github-actions/auth -- this
        #   should be a default behavior
        gcloud config get account || : code $?
        gcloud config set account "$SUDO_GCP_SERVICE_ACCOUNT"

        # also: mask the access token (NOTE: use cat to avoid xtrace'ing the token)
        # TODO: upstream feature request on google-github-actions/auth -- this
        #   should be a default behavior
        cat <<< "::add-mask::$(gcloud auth print-access-token)"

    # this should really be default behavior:
    - shell: ${{inputs.shell}}
      run: |
        # TODO: how exactly does ops terragrunt choose a terraform version?
        gha-set-env 'TF_VERSION' cat .terraform-version || true
        gha-set-env 'TERRAGRUNT_VERSION' cat .terragrunt-version

    - name: version before
      shell: ${{inputs.shell}}
      run: terraform --version || true

    - name: Setup Terragrunt
      uses: autero1/action-terragrunt@v1.3.2
      with:
        terragrunt_version: ${{env.TERRAGRUNT_VERSION}}

    - name: version after
      shell: ${{inputs.shell}}
      run: terraform --version || true

    - name: set draft variable
      shell: ${{inputs.shell}}
      run: gha-set-env 'GITHUB_PR_DRAFT' echo ${{github.event.pull_request.draft}} || true
