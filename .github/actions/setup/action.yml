name: Setup
description: "Sets up a Terraform environment for TACOS"

inputs:
  ssh-private-key:
    description: "Private SSH key to use for git clone"
    default: ""
  user:
    description: the username that will be used for following steps
    required: false
    default: ${{github.triggering_actor}}
  shell:
    description: "private -- do not use"
    default: env ./tacos-gha/lib/ci/default-shell {0}

runs:
  using: composite

  steps:
    - uses: ./tacos-gha/.github/actions/just-the-basics

    - name: tell TF username and PR
      uses: ./tacos-gha/.github/actions/set-username-and-hostname
      with:
        user: ${{inputs.user}}

    - name: Set up SSH agent
      if: inputs.ssh-private-key != ''
      uses: webfactory/ssh-agent@v0.8.0
      with:
        ssh-private-key: ${{ inputs.ssh-private-key }}

        # These fix most ownership, permission issues, but the .ssh config files
        # still get the wrong ownership, fixed in the next step.
        ssh-agent-cmd: |-
          ./tacos-gha/lib/ci/bin/sudo-ssh-agent
        ssh-add-cmd: |-
          ./tacos-gha/lib/ci/bin/sudo-ssh-add

    - name: Fix .ssh permissions
      shell: ${{inputs.shell}}
      if: inputs.ssh-private-key != ''
      run: |
        : fix ssh config ownership
        sudo chown -v -R "$(id -un):$(id -gn)" ~/.ssh

        : Show SSH agent pubkeys
        ssh-add -L

        : ... hashes too
        ssh-add -l

    - name: set workload identity provider
      id: set-workload-identity-provider
      shell: ${{inputs.shell}}
      run: |
        "$TACOS_GHA_HOME/"lib/ci/set-workload-identity-provider

    - name: set terraformer
      id: set-terraformer
      shell: ${{inputs.shell}}
      run: |
        "$TACOS_GHA_HOME/"lib/ci/set-terraformer

    - name: gcp auth
      id: auth
      uses: google-github-actions/auth@v2.1.1
      with:
        workload_identity_provider: ${{env.GETSENTRY_SAC_OIDC}}
        service_account: ${{env.SUDO_GCP_SERVICE_ACCOUNT}}

    - name: set gcloud identity
      shell: ${{inputs.shell}}
      run: |
        # TODO: upstream feature request on google-github-actions/auth -- this
        #   should be a default behavior
        gcloud config get account || : code $?
        gcloud config set account "$SUDO_GCP_SERVICE_ACCOUNT"

        # also: mask the access token (NOTE: use cat to avoid xtrace'ing the token)
        # TODO: upstream feature request on google-github-actions/auth -- this
        #   should be a default behavior
        cat <<< "::add-mask::$(gcloud auth print-access-token)"

    # this should really be default behavior:
    - shell: ${{inputs.shell}}
      run: |
        gha-set-env 'TF_VERSION' < "$(nearest-config-file .terraform-version)"
        gha-set-env 'TERRAGRUNT_VERSION' < "$(nearest-config-file .terragrunt-version)"

    - name: Setup Terragrunt
      uses: autero1/action-terragrunt@v1.3.2
      with:
        terragrunt_version: ${{env.TERRAGRUNT_VERSION}}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_wrapper: false
        terraform_version: ${{ env.TF_VERSION }}

    - name: Install terraform logging tools
      shell: ${{inputs.shell}}
      run: pip install sentry-infra-event-notifier --index-url https://pypi.devinfra.sentry.io/simple

    - name: set $GITHUB_PR_DRAFT
      shell: ${{inputs.shell}}
      run: |
        gh pr view \
            ${{ github.event.pull_request.html_url }} \
            --json isDraft \
            --jq .isDraft |
          gha-set-env 'GITHUB_PR_DRAFT' \
        ;
