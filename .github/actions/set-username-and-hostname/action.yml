name: Set Username and Hostname

inputs:
  user:
    description: the username that will be used for following steps
    required: true
    default: ${{github.triggering_actor}}
  hostname:
    description: a fake hostname to represent the relevant PR
    default: |-
      ${{github.event.pull_request.number}}.${{github.event.pull_request.base.repo.name}}.${{github.repository_owner}}.github.invalid
  shell:
    default: env ./tacos-gha/lib/ci/default-shell {0}

runs:
  using: composite

  steps:
    - name: "change hostname: ${{inputs.hostname}}"
      shell: ${{inputs.shell}}
      run: |
        : change hostname: ${{inputs.hostname}}
        HOSTNAME='${{inputs.hostname}}'
        sudo tee <<< "127.0.0.1	$HOSTNAME" -a /etc/hosts
        sudo hostname "$HOSTNAME"
        hostname -f
        echo "HOSTNAME=$HOSTNAME" >> "$GITHUB_ENV"

    - name: "add user: ${{inputs.user}}"
      shell: ${{inputs.shell}}
      run: |
        : "add user: ${{inputs.user}}"

        olduser="$USER"
        id "$olduser"

        : 'set user-group ("runner") as primary group, but without losing ' \
            'former primary group ("docker")'
        sudo usermod -g "$olduser" "$olduser" -aG "$(id -g)"

        : remove square brackets from bot names as they are invalid for linux
        newuser="$( tr -d '[]' <<< "${{inputs.user}}" )"
        : show defaults
        useradd -D

        : add the requested username
        sudo useradd \
          --gid "$olduser" \
          --groups "$(id -G | tr ' ' ,)" \
          "$newuser" \
        ;

        : make our user share the homedir with the original user
        newhome="$(getent passwd "$newuser" | cut -d: -f6)"
        sudo ln -sf "$HOME" "$newhome"

        : ensure equal sudo access
        sudo cat "/etc/sudoers.d/$olduser" |
          sed "s/^$olduser /$newuser /" |
          sudo tee "/etc/sudoers.d/$newuser" \
        ;

        : new user metadata:
        getent passwd "$newuser"
        sudo getent shadow "$newuser"

        : for comparison
        id "$olduser"
        sudo -lU "$olduser"
        id "$newuser"
        sudo -lU "$newuser"

        : ensure everything is equally accessible to my user-group '("runner")'
        # the _diag directory has files being rapidly created and deleted
        find "$HOME" \
            -path "$HOME/runners/*/_diag" -prune \
            -or \
            -user "$olduser" -group "$olduser" -not -type l -print0 |
          xargs -0r chmod g=u --

        : set default user/home for future steps
        echo "USER=$newuser" >> "$GITHUB_ENV"
        echo "HOME=$newhome" >> "$GITHUB_ENV"
