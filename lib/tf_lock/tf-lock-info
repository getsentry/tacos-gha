#!/bin/bash
set -eEuo pipefail
HERE="$(dirname "$(readlink -f "$0")")"

root_module="${1:-"$PWD"}"

if [[ "${DEBUG:-}" ]]; then
  set -x
fi

fancy_error="$(
  cd "$root_module" || exit 1
  # swap stdout and stderr:
  terraform force-unlock -force -- -1 3>&2 2>&1 1>&3 <<< ""
)" && status=$? || status=$?

# strip ansi fanciness from error messages, for automated consumption
error="$(
  uncolor <<< "$fancy_error" |
  sed -r 's/^│ //; /^[╷╵]$/d'
)"


if grep -Eq <<< "$error" $'ID:'; then
  "$HERE/"lib/error2json <<< "$error"
elif grep -Eq <<< "$error" '^Failed to unlock state: LocalState not locked$'
  then
  cat >&2 <<EOF
No remote tfstate configured, path: '$root_module'
EOF
  exit 1
elif grep -Eq <<< "$error" $'^\t\* storage: object doesn'\''t exist$'; then
  echo '{"lock": false}'
elif grep -Eq <<< "$error" \
    'Error: .*Backend initialization required, please run "terraform init"'
  then
  ( # NB: need to undo the cd to keep relative paths valid
    cd "$root_module"
    if ! noise="$(terraform init 2>&1)"; then
      echo >&2 Terraform init failed!
      echo >&2 "$noise"
      exit 1
    fi
  )
  exec "$0" "$@"  # start over
else  # an unexpected error: show it
  set +x
  echo -n >&2 "$fancy_error"  # avoid the appended newline of <<<
  exit "$status"
fi
