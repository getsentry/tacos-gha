#!/bin/bash
set -euo pipefail
title="$1"
script="$2"
tacos_verb="$(basename "$script")"

tf_log=tf-log.hcl
console_log=console.log
with-user-env "$TF_ROOT_MODULE" \
  "$script" 2>&1 >"$tf_log" |
  tee "$console_log" \
  && returncode=$? \
  || returncode=$? \
;

cat "$tf_log"

mkdir matrix-fan-out
ls -ld matrix-fan-out

# save everything, for analysis during fan-in summary
jq . > matrix-fan-out/matrix.json <<EOF
{
  "env": {
    "HOME": "$HOME",
    "GITHUB_WORKSPACE": "$GITHUB_WORKSPACE",
    "TF_ROOT_MODULE": "$TF_ROOT_MODULE",
    "TACOS_LOCK": "${TACOS_LOCK:-}"
  },
  "param": {
    "title": "$title",
    "script": "$script",
    "explanation": "$(cat)"
  },
  "result": {
    "returncode": "$returncode"
  }
}
EOF

# copy any files we want to keep
cp "$tf_log" "$console_log" matrix-fan-out/

ls -la matrix-fan-out
cat matrix-fan-out/matrix.json

if [[ "$tacos_verb" == "plan" ]] && (( returncode == 2 )); then
  # plan succeeded but found that changes need to be applied
  exit 0
else
  exit "$returncode"
fi
